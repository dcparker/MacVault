#!/usr/bin/env ruby

# Command: macvault-task
# Purpose: Perform all backups that are readily available.

require 'time'
require 'yaml'

ENV["PATH"] = '/usr/local/bin:/opt/local/bin:' + ENV["PATH"]

config = YAML.load_file("#{ENV['HOME']}/.MacVault")

if File.directory?("/Volumes/#{config[:backup_volume]}/MacVault")
  puts "MacVault volume present: #{config[:backup_volume]}"

  $stderr.close
  $stderr = File.open("/Volumes/#{config[:backup_volume]}/MacVault/Backup.log", 'a')
  $stderr <<  "[#{Time.now}] Begin Backup\n"

  Dir.glob("/Volumes/#{config[:backup_volume]}/MacVault/*").select {|d| File.directory?(d)}.each do |backup_dir|
    $stderr << "\tBacking up #{backup_dir.match(/([^\/]+)$/)[1]}..."
    $stderr.flush

    Dir.chdir(backup_dir)
    $git = "GIT_DIR=\"#{backup_dir}/.git\" git"
    puts "In (#{Dir.pwd})"
    frequency = `#{$git} config core.x-backup-frequency`.chomp.to_i
    last_backup = `#{$git} config core.x-last-backup`.chomp; last_backup = last_backup.length > 0 ? Time.parse(last_backup) : Time.now - (frequency+10)
    if last_backup + frequency < Time.now
      src_location = `#{$git} config core.x-backup-location`.chomp.gsub(/\$HOME/,ENV['HOME'])
      Dir.chdir(src_location)
      puts "\tIn (#{Dir.pwd})"
      system "#{$git} config core.x-last-backup \"#{Time.now}\""
      puts "\tgit add --all -v"
      system "#{$git} add --all -v"
      puts "\tgit commit -m \"Regular Backup\""
      system "#{$git} commit -m \"Regular Backup\""
      $stderr <<  " .. done at [#{Time.now}]\n"
    else
      $stderr << " (no need - backed up recently)\n"
    end
  end

  $stderr <<  "[#{Time.now}] Backup Complete\n"
else
  warn "[#{Time.now}] dry run\n"
end
$stderr.close
exit
